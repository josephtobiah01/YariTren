# Xamarin.iOS

trigger:
  - develop

variables:
- group: 'variables'

jobs:
  - job: 'BuildiOS'
    pool:
      vmImage: 'macOS-latest'
    
    variables:
      buildConfiguration: 'Prod'
    
    steps:
      - task: NuGetToolInstaller@1
      - task: NuGetCommand@2
        inputs:
          restoreSolution: '**/YarraTramsMobile.sln'
      - task: DownloadSecureFile@1
        inputs:
          secureFile: '$(ProvisioningProfile-FileName)'    
      - task: DownloadSecureFile@1
        inputs:
          secureFile: '$(AppleCertificate-FileName)'
      - task: InstallAppleCertificate@2
        inputs:
          certSecureFile: '$(AppleCertificate-FileName)'
          certPwd: '$(AppleCertificate-Password)'
      - task: InstallAppleProvisioningProfile@1
        inputs:
          provisioningProfileLocation: secureFiles
          provProfileSecureFile: '$(ProvisioningProfile-FileName)'
          removeProfile: true
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
            curl -sSL https://dot.net/v1/dotnet-install.sh | bash
            echo "##vso[task.prependpath]/Library/Frameworks/Mono.framework/Versions/6.4.0/bin"     


      - task: XamariniOS@2
        inputs:
          solutionFile: '**/YarraTramsMobile.iOS.csproj'
          configuration: '$(buildConfiguration)'
          buildForSimulator: false
          packageApp: true
          signingIdentity: $(APPLE_CERTIFICATE_SIGNING_IDENTITY)
          signingProvisioningProfileID: $(APPLE_PROV_PROFILE_UUID)
      
      - task: CopyFiles@2
        inputs:
          Contents: '**/*.ipa'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
          OverWrite: true
          flattenFolders: true
      
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'MyAwesomeApp-$(Build.BuildNumber)'
          publishLocation: Container